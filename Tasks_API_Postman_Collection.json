{
  "info": {
    "name": "Tasks API - Fullstack Test",
    "description": "Collection para testar a API de tarefas do desafio fullstack",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "taskId",
      "value": "1",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Criar Tarefa",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Minha primeira tarefa\",\n  \"description\": \"Descrição da minha primeira tarefa\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["tasks"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Response has required fields\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('title');",
              "    pm.expect(jsonData).to.have.property('completed');",
              "    pm.expect(jsonData.completed).to.be.false;",
              "});",
              "",
              "pm.test(\"Save task ID\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.environment.set(\"taskId\", jsonData.id);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "2. Listar Todas as Tarefas",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["tasks"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response is an array\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "3. Atualizar Tarefa",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Tarefa atualizada\",\n  \"completed\": true\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}",
          "host": ["{{baseUrl}}"],
          "path": ["tasks", "{{taskId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Task was updated\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.title).to.eql('Tarefa atualizada');",
              "    pm.expect(jsonData.completed).to.be.true;",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "4. Deletar Tarefa",
      "request": {
        "method": "DELETE",
        "url": {
          "raw": "{{baseUrl}}/tasks/{{taskId}}",
          "host": ["{{baseUrl}}"],
          "path": ["tasks", "{{taskId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", function () {",
              "    pm.response.to.have.status(204);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "❌ Teste: Criar sem título",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"description\": \"Tarefa sem título\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["tasks"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Error message contains title validation\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.include('Title is required');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "❌ Teste: Criar com título vazio",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"\",\n  \"description\": \"Título vazio\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["tasks"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Error message about empty title\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.include('Title is required and cannot be empty');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "❌ Teste: Atualizar tarefa inexistente",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Tarefa que não existe\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/tasks/999",
          "host": ["{{baseUrl}}"],
          "path": ["tasks", "999"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", function () {",
              "    pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"Error message about not found\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.include('Task with ID 999 not found');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "❌ Teste: Deletar tarefa inexistente",
      "request": {
        "method": "DELETE",
        "url": {
          "raw": "{{baseUrl}}/tasks/999",
          "host": ["{{baseUrl}}"],
          "path": ["tasks", "999"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", function () {",
              "    pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test(\"Error message about not found\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.include('Task with ID 999 not found');",
              "});"
            ]
          }
        }
      ]
    }
  ]
}